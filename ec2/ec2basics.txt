EC2 user Data

 - it is possible to bootstrap our instances using an EC2 user data script.
 - Boostrapping means launching commands when machine starts
 - That script is only run once at the instance first start
 - ec2 user data is to automate boot tasks such as :
   1)installing updates
   2) installing software
   3) Downloading commom files from the internet
   - ec2 user data scripts runs with root user
   
   
   
example :
 #!/bin/bash
# Use this for your user data (script from top to bottom)
# install httpd (Linux 2 version)
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
   
   - If you stop and then restart the ec2 instance then the public ipv4 will change most probably but private ipv4 will not change . You access the instance from global by public ipv4 for internal usage privat eipv4 is being used.

   
t2.micro is part of AWS free tier(upto 750 hr per month)
30 GB of EBS Genral Purpose(SSD) or magnetic storage is also free 
   
EC2 instances types   

There are 7 types of ec2 instances :

1) Genral purpose 2)Computer Optimized  3) Memory Optimized 4)Accelared computing 5)Storage Optimized  6)Instance Features 7) Measuring instance performance


Example:
m5.2x large 

m: instance class
5: generation(aws improves over time)
2xlarge : size within the instance class



General Purpose 
Provide a balance of compute, memory and networking resources, and can be used for a variety of diverse workloads.
These instances are ideal for applications that use these resources in equal proportions such as web servers and code repositories. 


Compute Optimized
Well suited for batch processing workloads, media transcoding, high performance web servers, high performance computing (HPC), scientific modeling, dedicated gaming servers and ad server engines, machine learning inference and other compute intensive applications
Compute Optimized instances are ideal for compute bound applications that benefit from high performance processors.
All compute type are starting with C

Mmeory Optimzed
Memory optimized instances are designed to deliver fast performance for workloads that process large data sets in memory.
Applications ----->
-High performace ,relational/non relational databases
-Distributed web scale cache stores
-In-memory optimized for BI
-Applications performing real-time processing of big unstructured data
Thery mostly starts with R (starts with Ram)

Accelerated Computing
Accelerated computing instances use hardware accelerators, or co-processors, to perform functions, such as floating point number calculations, graphics processing, or data pattern matching, more efficiently than is possible in software running on CPUs.

Storage Optimized
Storage optimized instances are designed for workloads that require high, sequential read and write access to very large data sets on local storage.
They are optimized to deliver tens of thousands of low-latency, random I/O operations per second (IOPS) to applications.
Use cases __>
- High frequencey online trasnlation processing (OLTP)
-Relational & NoSQL databses
-Cache for in-memory databses(redis)
-Data warehousing applications
-Distibuted file systems


